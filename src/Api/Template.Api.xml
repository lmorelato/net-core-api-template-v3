<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Template.Api</name>
    </assembly>
    <members>
        <member name="M:Template.Api.Controllers.UsersController.GetAsync(System.Int32)">
            <summary>
            Find user by Id
            </summary>
            <param name="id">User Id</param>
            <returns>Found user</returns>
            <response code="200">Returns the found user</response>
            <response code="401">Unauthorized</response>    
            <response code="404">If not found the user</response>    
        </member>
        <member name="M:Template.Api.Controllers.UsersController.PostAsync(Template.Core.Models.Dtos.CredentialsDto)">
            <summary>
            Add user
            </summary>
            <param name="credentials">User credentials</param>
            <returns>A newly created user</returns>
            <response code="201">Returns the newly created item</response>
            <response code="400">If the credentials are invalid</response>            
        </member>
        <member name="M:Template.Api.Controllers.UsersController.PutAsync(System.Int32,Template.Core.Models.Dtos.UserDto)">
            <summary>
            Update user
            </summary>
            <param name="id">User Id</param>
            <param name="userDto">User data</param>
            <returns>No content</returns>
            <response code="204">Returns no content</response>
            <response code="400">If the user data is invalid</response>
            <response code="401">Unauthorized</response> 
            <response code="404">If not found the user</response>     
        </member>
        <member name="M:Template.Api.Controllers.UsersController.UpdateCultureAsync(System.Int32)">
            <summary>
            Update user's culture
            </summary>
            <param name="id">User Id</param>
            <returns>No content</returns>
            <response code="204">Returns no content</response>
            <response code="400">If the user data is invalid</response>
            <response code="401">Unauthorized</response> 
            <response code="404">If not found the user</response>     
        </member>
        <member name="M:Template.Api.Controllers.UsersController.UpdatePasswordAsync(System.Int32,Template.Core.Models.Dtos.PasswordDto)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="passwordDto"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.UsersController.DeleteAsync(System.Int32)">
            <summary>
            Remove user
            </summary>
            <param name="id">User id</param>
            <returns>No content</returns>
            <response code="204">Returns no content</response>
            <response code="400">If the user data is invalid</response>    
            <response code="404">If not found the user</response>  
        </member>
        <member name="M:Template.Api.Controllers.UsersController.SendConfirmationEmailAsync(System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.UsersController.ConfirmEmailAsync(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Template.Api.Controllers.UsersController.ResetPasswordAsync(System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
